<%@ CodeTemplate Inherits="CodeTemplate" Language="C#" TargetLanguage="Text" Description="NetTiers main template." Debug="True" ResponseEncoding="UTF-8"%>

<%@ Assembly Name="SchemaExplorer" %><%--访问数据库的组件--%>
<%@ Import Namespace="SchemaExplorer" %> <%--声明使用命名空间--%>
<%-- 数据库 --%>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema"%>
<%-- 注册实体层Entity模板 --%>
<%@ Register Name="EntityTemplate" Template="Entity.cst" MergeProperties="False" ExcludeProperties=""%>

<%
    this.GenerateEntityClasses();
    Debug.WriteLine("Ok");
%>

<script runat="template">
private string Directory = String.Empty;
[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor),typeof(System.Drawing.Design.UITypeEditor))]
[Optional, NotChecked]
[DefaultValue("")]
public string OutputDirectory
{
    get
    {
        return Directory;
    }
    set
    {
        if(value.EndsWith("\\")) value=value.Substring(0,value.Length-1);
        Directory = value;
    }
}
</script>
<script runat="template">
//生成实体Entity类
private void GenerateEntityClasses()
{
    CodeTemplate template= new EntityTemplate();//创建了一个新的模板（就是在上面注册的模板，指向了Entity.cst模板文件）
    foreach(TableSchema table in this.SourceDatabase.Tables)
    {
        string fileDirectory = OutputDirectory+"\\"+table.Name+".cs";
        template.SetProperty("Table", table);
        //文件输出
        template.RenderToFile(fileDirectory, true);
        Debug.WriteLine(fileDirectory+" 创建成功");
    }
}
</script>